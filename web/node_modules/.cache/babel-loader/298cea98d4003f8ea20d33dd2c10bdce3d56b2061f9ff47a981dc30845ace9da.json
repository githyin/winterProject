{"ast":null,"code":"var _jsxFileName = \"/Users/johyeonmin/Documents/winterProject/web/src/pages/upload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col, Card, Form, Button } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Upload({\n  socket\n}) {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState(\"\");\n  useEffect(() => {\n    if (socket) {\n      // 업로드 성공 메시지를 받을 리스너\n      socket.on(\"file_upload_success\", message => {\n        setUploadStatus(message);\n      });\n\n      // 업로드 실패 메시지를 받을 리스너\n      socket.on(\"file_upload_failure\", message => {\n        setUploadStatus(message);\n      });\n      return () => {\n        // 리스너 제거\n        socket.off(\"file_upload_success\");\n        socket.off(\"file_upload_failure\");\n      };\n    }\n  }, [socket]);\n  const handleFileSelect = event => {\n    setSelectedFile(event.target.files[0]);\n    setUploadStatus(\"\"); // 상태 초기화\n  };\n  const handleUpload = () => {\n    if (selectedFile && socket) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        // 파일 데이터를 서버로 전송합니다.\n        socket.emit(\"upload_file\", {\n          name: selectedFile.name,\n          type: selectedFile.type,\n          size: selectedFile.size,\n          data: e.target.result\n        });\n      };\n      reader.onerror = e => {\n        console.error(\"FileReader error\", e);\n        setUploadStatus(\"Error reading file.\");\n      };\n\n      // ArrayBuffer 형태로 파일을 읽어서 전송합니다.\n      reader.readAsArrayBuffer(selectedFile);\n    } else {\n      setUploadStatus(\"No file selected or socket not connected.\");\n    }\n  };\n  const handleKeyPress = event => {\n    if (event.key === \"Enter\") {\n      event.preventDefault(); // 폼 제출 방지\n      handleUpload(); // 파일 업로드 함수 호출\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-md-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: true,\n        lg: \"6\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"mt-5\",\n          style: {\n            height: \"500px\",\n            border: \"none\",\n            borderRadius: \"20px\",\n            boxShadow: \"0px 10px 20px rgba(0, 0, 0, 0.1)\",\n            overflow: \"auto\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              className: \"text-center\",\n              style: {\n                fontSize: \"2rem\",\n                fontWeight: \"bold\",\n                color: \"#333\"\n              },\n              children: \"CHAIRS Upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formFileMultiple\",\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Multiple files input example\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"file\",\n                  multiple: true,\n                  onChange: handleFileSelect,\n                  onKeyPress: handleKeyPress\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(Upload, \"R32w6ceHHA74ShDAuuibg9ZVG7E=\");\n_c = Upload;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","useEffect","useState","Container","Row","Col","Card","Form","Button","jsxDEV","_jsxDEV","Upload","socket","_s","selectedFile","setSelectedFile","uploadStatus","setUploadStatus","on","message","off","handleFileSelect","event","target","files","handleUpload","reader","FileReader","onload","e","emit","name","type","size","data","result","onerror","console","error","readAsArrayBuffer","handleKeyPress","key","preventDefault","children","className","xs","lg","style","height","border","borderRadius","boxShadow","overflow","Body","Title","fontSize","fontWeight","color","fileName","_jsxFileName","lineNumber","columnNumber","Group","controlId","Label","Control","multiple","onChange","onKeyPress","_c","$RefreshReg$"],"sources":["/Users/johyeonmin/Documents/winterProject/web/src/pages/upload.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col, Card, Form, Button } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction Upload({ socket }) {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState(\"\");\n\n  useEffect(() => {\n    if (socket) {\n      // 업로드 성공 메시지를 받을 리스너\n      socket.on(\"file_upload_success\", (message) => {\n        setUploadStatus(message);\n      });\n\n      // 업로드 실패 메시지를 받을 리스너\n      socket.on(\"file_upload_failure\", (message) => {\n        setUploadStatus(message);\n      });\n\n      return () => {\n        // 리스너 제거\n        socket.off(\"file_upload_success\");\n        socket.off(\"file_upload_failure\");\n      };\n    }\n  }, [socket]);\n\n  const handleFileSelect = (event) => {\n    setSelectedFile(event.target.files[0]);\n    setUploadStatus(\"\"); // 상태 초기화\n  };\n\n  const handleUpload = () => {\n    if (selectedFile && socket) {\n      const reader = new FileReader();\n\n      reader.onload = (e) => {\n        // 파일 데이터를 서버로 전송합니다.\n        socket.emit(\"upload_file\", {\n          name: selectedFile.name,\n          type: selectedFile.type,\n          size: selectedFile.size,\n          data: e.target.result,\n        });\n      };\n\n      reader.onerror = (e) => {\n        console.error(\"FileReader error\", e);\n        setUploadStatus(\"Error reading file.\");\n      };\n\n      // ArrayBuffer 형태로 파일을 읽어서 전송합니다.\n      reader.readAsArrayBuffer(selectedFile);\n    } else {\n      setUploadStatus(\"No file selected or socket not connected.\");\n    }\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      event.preventDefault(); // 폼 제출 방지\n      handleUpload(); // 파일 업로드 함수 호출\n    }\n  };\n\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col xs lg=\"6\">\n          <Card\n            className=\"mt-5\"\n            style={{\n              height: \"500px\",\n              border: \"none\",\n              borderRadius: \"20px\",\n              boxShadow: \"0px 10px 20px rgba(0, 0, 0, 0.1)\",\n              overflow: \"auto\",\n            }}\n          >\n            <Card.Body>\n              <Card.Title\n                className=\"text-center\"\n                style={{ fontSize: \"2rem\", fontWeight: \"bold\", color: \"#333\" }}\n              >\n                CHAIRS Upload\n              </Card.Title>\n              <Form>\n                <Form.Group controlId=\"formFileMultiple\" className=\"mb-3\">\n                  <Form.Label>Multiple files input example</Form.Label>\n                  <Form.Control\n                    type=\"file\"\n                    multiple\n                    onChange={handleFileSelect}\n                    onKeyPress={handleKeyPress}\n                  />\n                </Form.Group>\n              </Form>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Upload;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}