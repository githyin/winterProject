{"ast":null,"code":"var _jsxFileName = \"/Users/johyeonmin/Documents/winterProject/web/src/pages/upload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Card, Form } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Upload({\n  socket\n}) {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState(\"\");\n  useEffect(() => {\n    if (socket) {\n      // 업로드 성공 메시지를 받을 리스너\n      socket.on(\"file_upload_success\", message => {\n        setUploadStatus(message);\n      });\n\n      // 업로드 실패 메시지를 받을 리스너\n      socket.on(\"file_upload_failure\", message => {\n        setUploadStatus(message);\n      });\n      return () => {\n        // 리스너 제거\n        socket.off(\"file_upload_success\");\n        socket.off(\"file_upload_failure\");\n      };\n    }\n  }, [socket]);\n  const handleFileSelect = event => {\n    setSelectedFile(event.target.files[0]);\n    setUploadStatus(\"\"); // 상태 초기화\n  };\n  const handleUpload = event => {\n    event.preventDefault(); // 기본 폼 제출을 막습니다.\n    if (selectedFile && socket) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        // 파일 데이터를 서버로 전송합니다.\n        socket.emit(\"upload_file\", {\n          name: selectedFile.name,\n          type: selectedFile.type,\n          size: selectedFile.size,\n          data: e.target.result\n        });\n        setSelectedFile(null); // 파일 선택 상태 초기화\n      };\n      reader.onerror = e => {\n        console.error(\"FileReader error\", e);\n        setUploadStatus(\"Error reading file.\");\n      };\n\n      // ArrayBuffer 형태로 파일을 읽어서 전송합니다.\n      reader.readAsArrayBuffer(selectedFile);\n    } else {\n      setUploadStatus(\"No file selected or socket not connected.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-md-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: true,\n        lg: \"6\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"mt-5\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              className: \"text-center\",\n              children: \"CHAIRS Upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: handleUpload,\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formFileMultiple\",\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Multiple files input example\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"file\",\n                  multiple: true,\n                  onChange: handleFileSelect\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                style: {\n                  display: \"none\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: uploadStatus\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(Upload, \"R32w6ceHHA74ShDAuuibg9ZVG7E=\");\n_c = Upload;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","Form","jsxDEV","_jsxDEV","Upload","socket","_s","selectedFile","setSelectedFile","uploadStatus","setUploadStatus","on","message","off","handleFileSelect","event","target","files","handleUpload","preventDefault","reader","FileReader","onload","e","emit","name","type","size","data","result","onerror","console","error","readAsArrayBuffer","children","className","xs","lg","Body","Title","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","controlId","Label","Control","multiple","onChange","style","display","_c","$RefreshReg$"],"sources":["/Users/johyeonmin/Documents/winterProject/web/src/pages/upload.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Card, Form } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction Upload({ socket }) {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState(\"\");\n\n  useEffect(() => {\n    if (socket) {\n      // 업로드 성공 메시지를 받을 리스너\n      socket.on(\"file_upload_success\", (message) => {\n        setUploadStatus(message);\n      });\n\n      // 업로드 실패 메시지를 받을 리스너\n      socket.on(\"file_upload_failure\", (message) => {\n        setUploadStatus(message);\n      });\n\n      return () => {\n        // 리스너 제거\n        socket.off(\"file_upload_success\");\n        socket.off(\"file_upload_failure\");\n      };\n    }\n  }, [socket]);\n\n  const handleFileSelect = (event) => {\n    setSelectedFile(event.target.files[0]);\n    setUploadStatus(\"\"); // 상태 초기화\n  };\n\n  const handleUpload = (event) => {\n    event.preventDefault(); // 기본 폼 제출을 막습니다.\n    if (selectedFile && socket) {\n      const reader = new FileReader();\n\n      reader.onload = (e) => {\n        // 파일 데이터를 서버로 전송합니다.\n        socket.emit(\"upload_file\", {\n          name: selectedFile.name,\n          type: selectedFile.type,\n          size: selectedFile.size,\n          data: e.target.result,\n        });\n        setSelectedFile(null); // 파일 선택 상태 초기화\n      };\n\n      reader.onerror = (e) => {\n        console.error(\"FileReader error\", e);\n        setUploadStatus(\"Error reading file.\");\n      };\n\n      // ArrayBuffer 형태로 파일을 읽어서 전송합니다.\n      reader.readAsArrayBuffer(selectedFile);\n    } else {\n      setUploadStatus(\"No file selected or socket not connected.\");\n    }\n  };\n\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col xs lg=\"6\">\n          <Card className=\"mt-5\">\n            <Card.Body>\n              <Card.Title className=\"text-center\">CHAIRS Upload</Card.Title>\n              <Form onSubmit={handleUpload}>\n                <Form.Group controlId=\"formFileMultiple\" className=\"mb-3\">\n                  <Form.Label>Multiple files input example</Form.Label>\n                  <Form.Control\n                    type=\"file\"\n                    multiple\n                    onChange={handleFileSelect}\n                  />\n                </Form.Group>\n                <input type=\"submit\" style={{ display: \"none\" }} />\n                {uploadStatus && <p>{uploadStatus}</p>}\n              </Form>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Upload;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}