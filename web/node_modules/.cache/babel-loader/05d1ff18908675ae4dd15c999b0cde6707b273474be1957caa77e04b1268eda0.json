{"ast":null,"code":"var _jsxFileName = \"/Users/johyeonmin/Documents/winterProject/web/src/pages/upload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Container, Row, Col, Card, Button, Form } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Upload() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleFileSelect = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append(\"file\", selectedFile);\n      try {\n        // 여기서 'your-upload-endpoint'는 실제 업로드를 처리하는 서버 엔드포인트입니다.\n        const response = await fetch(\"your-upload-endpoint\", {\n          method: \"POST\",\n          body: formData\n        });\n        if (response.ok) {\n          console.log(\"File uploaded successfully\");\n        } else {\n          console.error(\"Upload failed\");\n        }\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-md-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: true,\n        lg: \"6\",\n        className: \"d-flex flex-row\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(Form.File, {\n              id: \"file-upload\",\n              label: \"Choose a file...\",\n              custom: true,\n              accept: \".pdf,.ppt,.hwp\",\n              onChange: handleFileSelect\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleUpload,\n            disabled: !selectedFile,\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Upload, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = Upload;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","useState","Container","Row","Col","Card","Button","Form","Link","jsxDEV","_jsxDEV","Upload","_s","selectedFile","setSelectedFile","handleFileSelect","event","target","files","handleUpload","formData","FormData","append","response","fetch","method","body","ok","console","log","error","children","className","xs","lg","Group","File","id","label","custom","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/johyeonmin/Documents/winterProject/web/src/pages/upload.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Container, Row, Col, Card, Button, Form } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Link } from \"react-router-dom\";\n\nfunction Upload() {\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  const handleFileSelect = (event) => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const handleUpload = async () => {\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append(\"file\", selectedFile);\n\n      try {\n        // 여기서 'your-upload-endpoint'는 실제 업로드를 처리하는 서버 엔드포인트입니다.\n        const response = await fetch(\"your-upload-endpoint\", {\n          method: \"POST\",\n          body: formData,\n        });\n\n        if (response.ok) {\n          console.log(\"File uploaded successfully\");\n        } else {\n          console.error(\"Upload failed\");\n        }\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    }\n  };\n\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col xs lg=\"6\" className=\"d-flex flex-row\">\n          {/* 기존 Card 코드는 유지 */}\n          {/* ... */}\n          <Form>\n            <Form.Group>\n              <Form.File\n                id=\"file-upload\"\n                label=\"Choose a file...\"\n                custom\n                accept=\".pdf,.ppt,.hwp\"\n                onChange={handleFileSelect}\n              />\n            </Form.Group>\n            <Button onClick={handleUpload} disabled={!selectedFile}>\n              Upload\n            </Button>\n          </Form>\n          {/* 나머지 코드는 유지 */}\n          {/* ... */}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Upload;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,MAAM,EAAEC,IAAI,QAAQ,iBAAiB;AACzE,OAAO,sCAAsC;AAC7C,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMc,gBAAgB,GAAIC,KAAK,IAAK;IAClCF,eAAe,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAIN,YAAY,EAAE;MAChB,MAAMO,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAET,YAAY,CAAC;MAErC,IAAI;QACF;QACA,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,sBAAsB,EAAE;UACnDC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEN;QACR,CAAC,CAAC;QAEF,IAAIG,QAAQ,CAACI,EAAE,EAAE;UACfC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;QAC3C,CAAC,MAAM;UACLD,OAAO,CAACE,KAAK,CAAC,eAAe,CAAC;QAChC;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAChC;IACF;EACF,CAAC;EAED,oBACEpB,OAAA,CAACR,SAAS;IAAA6B,QAAA,eACRrB,OAAA,CAACP,GAAG;MAAC6B,SAAS,EAAC,2BAA2B;MAAAD,QAAA,eACxCrB,OAAA,CAACN,GAAG;QAAC6B,EAAE;QAACC,EAAE,EAAC,GAAG;QAACF,SAAS,EAAC,iBAAiB;QAAAD,QAAA,eAGxCrB,OAAA,CAACH,IAAI;UAAAwB,QAAA,gBACHrB,OAAA,CAACH,IAAI,CAAC4B,KAAK;YAAAJ,QAAA,eACTrB,OAAA,CAACH,IAAI,CAAC6B,IAAI;cACRC,EAAE,EAAC,aAAa;cAChBC,KAAK,EAAC,kBAAkB;cACxBC,MAAM;cACNC,MAAM,EAAC,gBAAgB;cACvBC,QAAQ,EAAE1B;YAAiB;cAAA2B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5B;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACQ,CAAC,eACbnC,OAAA,CAACJ,MAAM;YAACwC,OAAO,EAAE3B,YAAa;YAAC4B,QAAQ,EAAE,CAAClC,YAAa;YAAAkB,QAAA,EAAC;UAExD;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB;AAACjC,EAAA,CAxDQD,MAAM;AAAAqC,EAAA,GAANrC,MAAM;AA0Df,eAAeA,MAAM;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}